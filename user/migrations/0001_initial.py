# Generated by Django 3.2.5 on 2021-07-10 13:10

import datetime
import django.contrib.auth.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='bike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('color', models.CharField(max_length=20)),
                ('brand', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'bike',
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('color', models.CharField(max_length=20)),
                ('brand', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'zuser',
            },
        ),
        migrations.CreateModel(
            name='lulu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameq', models.CharField(max_length=50)),
                ('colorq', models.CharField(max_length=20)),
                ('brandq', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'apolo',
            },
        ),
        migrations.CreateModel(
            name='mo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('named', models.CharField(max_length=50)),
                ('colord', models.CharField(max_length=20)),
                ('brandd', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'mo',
            },
        ),
        migrations.CreateModel(
            name='muamua',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name1', models.CharField(max_length=50)),
                ('color1', models.CharField(max_length=20)),
                ('brand1', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'hahahihi',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=60, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True, unique=True)),
                ('email_service', models.EmailField(blank=True, max_length=100, null=True, unique=True)),
                ('phone', models.CharField(blank=True, max_length=11, null=True)),
                ('adress', models.CharField(blank=True, max_length=200, null=True)),
                ('password', models.CharField(max_length=100)),
                ('username', models.CharField(blank=True, max_length=40, null=True)),
                ('active', models.IntegerField(blank=True, default='0')),
                ('reject', models.IntegerField(blank=True, default='0')),
                ('active_notification', models.IntegerField(blank=True, default='0')),
                ('other_info', models.IntegerField(blank=True, null=True)),
                ('kind', models.CharField(blank=True, max_length=20, null=True)),
                ('date_joined', models.DateTimeField(default=datetime.datetime(2021, 7, 10, 20, 10, 11, 129484))),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
